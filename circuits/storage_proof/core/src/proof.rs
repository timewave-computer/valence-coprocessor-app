use alloy_primitives::{Address, B256, U256, keccak256};
use alloy_rpc_types_eth::EIP1186AccountProofResponse;
use alloy_trie::Nibbles;
use anyhow::ensure;

/// given an eth address and a slot index for erc20 balances mapping,
/// returns the keccak256 bytes used to access the target storage slot
pub fn mapping_slot_key(holder: Address, slot_index: u64) -> B256 {
    // left-pad address to 32 bytes
    let mut addr_padded = [0u8; 32];
    addr_padded[12..].copy_from_slice(holder.as_slice());

    let slot_b256: B256 = U256::from(slot_index).into();

    // preimage = pad(addr) || pad(slot)
    let mut preimage = [0u8; 64];
    preimage[..32].copy_from_slice(&addr_padded);
    preimage[32..].copy_from_slice(slot_b256.as_slice());

    keccak256(preimage)
}

/// verifies a `EIP1186AccountProofResponse` storage proof.
/// errors if there is more than one proof in the array.
pub fn verify_proof(proof: &EIP1186AccountProofResponse) -> anyhow::Result<()> {
    ensure!(
        proof.storage_proof.len() == 1,
        "proof must contain a single storage proof entry"
    );

    // get the root, not sure if this is the right one?
    let storage_root: B256 = proof.storage_hash;
    // grab the first (and only) storage proof
    let storage_proof = proof.storage_proof[0].clone();

    // get the storage key in order to get the nibbles path
    let slot_plain: B256 = storage_proof.key.as_b256();
    let slot_hashed: B256 = keccak256(slot_plain);
    let path_nibbles = Nibbles::unpack(slot_hashed.as_slice());

    // encode the expected value in rlp (recursive-length prefix)
    let expected_value_rlp = alloy_rlp::encode(storage_proof.value);

    // grab the node iterator for node traversal
    let node_iter = storage_proof.proof.iter();

    alloy_trie::proof::verify_proof(
        storage_root,
        path_nibbles,
        Some(expected_value_rlp),
        node_iter,
    )
    .map_err(|e| anyhow::anyhow!(e))
}

#[cfg(test)]
extern crate std;

#[cfg(test)]
mod tests {
    use super::*;
    use serde_json::Value;

    const EIP_1186_ACC_PROOF_RESPONSE: &str = r#"
    {
        "address": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
        "balance": "0x0",
        "codeHash": "0xd80d4b7c890cb9d6a4893e6b52bc34b56b25335cb13716e0d1d31383e6b41505",
        "nonce": "0x1",
        "storageHash": "0x30b9cd8fcdad6ec7a8098aa005fddf8556cf46ac9c75be6de5429529250ec434",
        "accountProof": [
            "0xf90211a05e790929ecfc251c20e2327751a76e124094c347b95d5a0a0c4632f34d9f886ba085b2d53c15f32b083b8ece657a28fdf757db68e2e5e28eed941a3e63bf59f86aa0dcc0095097b1e0de54a0125f469c2dbd37868c60dc35e8462e75e9d725e9be8da024cbf5a09d39ecbfd0c25dfbdb401ef63f2bd09dfc95f540a0663a59735efe1da07bfbb1750b3274dcf722802e4b5c396c0a7b7d3d6e207659ec8ae2f9749e642ea045aeba20b01233c2e1fea293039d687500d05296e0e2b56c4f7f5ee816b2bc27a0827294aba8ab24e6f203bc71a4795f5576cd21d2f3e283f0f05a097ffcbad5eca0a8113349df3292cdd51c47f18fd3ce7a4c1551ce98fd76c25ace51f11fbf6c02a08458e123e8b356e6feaf5e5b2cd3cd7388423d933163567bb5b0b061abed819fa0d078a6acb8c6b759e0978088a8acb565f6600270d08ec4b8c9beb67927282ca1a0c8f70cc210a3b24fd6811e06b08efba0566a129794913af08b529ac05b62273da0ba2cbd6b2f26f4d53bb9d144206ed96d1c055e9eb032203d6c27011d564bca8da0785d66b14e46ded9a4397edaf67219e9e12716c8e16199a8bfea618c4ae5d339a0d1fb9c67c3caca920c2caea574ae0f7180752a27acad51f72ff5cfc27dc77d6ba0d4faa72ebc93258c44367e61b14f9b34c5c3bb954035b591944efa71ae157deca0d2f3de221e9d3b8f9fb70d1732791923cab1a3bc7447f95db3042fd2d47b674780",
            "0xf90211a0feebb26ea82236e07ef9c3512501d5777c40620b171941f4e5b907b244a53387a027ef05d5edb5c291399b7d454d3b3c162ef92b5dceff216d04b97427734b9b3fa0bac3eb970f94a59f78bb6cd49e76ea564c6f838e53e4eae2b2cdd7fe7b8e94a1a0a7c1b26c5477452b46f716ee8417d653462e82a646c034a92eadfac5a0da7383a049b3bdfb23ef49367a585e5681fdacf24cbe0048cb44b74daab1369db6b27d19a072337bdd8894b5df86aa810898201b3b87746f8dc7a7af720ff7c29db290cb3da0402d1ea147d5f2d96a54f858881a573fe66c952c0ff2b2d34c835f75b6674ffba0c70b3635d6e8df76500c43ed96ce5e42c463875ba7b264949ab625abcf4f0752a02ca90cf9822601e0b01e57de4373b2690361adae148111cc028742b9a089ff19a04fb055352ccb184985dc6b4608a1719035b51fd7933205f5fd2588a8646e51c8a0e4af68f87db30e980c5965f3adc97ee35502c7ed27127f17b68a6d5e6c57e9e8a040a67fd277e3a621a7b93c20610673ff8ba565c4335c9736df254300d392e7c4a0652c9ce30a8e18c699047fb75ae2caf2ccd3b4eed3e58260ad520760ac8bd756a0e619c8e6857646e37e1abfbc446e264667dec57f03b1c0083f2041ad396c1648a080ac01cb9ba398ed52e76625622c22f7bbac74e6e46b1aeb791855b4b43fc17da0a2a01fb09462bdaae323547209cbbe37d12f18c179aa3d50f2dbd38bd26dc74b80",
            "0xf90211a054ddae8a8f4ef6831151fcb48ee7bf50f7a4fbbd2fc10b64d055faef9d69fdb6a0578cebe8806c778d297fd0f5f9bb99b11d99128f82b56e0c0f2cbfbd2ceba8bca0892907613072ae8790d128f53ed27e24d0f02d1ea2a23ae784b9c1c444ec5296a04cfd387e9af71c1012e0bc95f357d87847105564972ff37d6c6d8008c68e5b97a02ee1d4abd3bd0d85eafacb50c178b6ae40f50bd3155b11f53845a5c3893ff81ba01504d62cfce607810cfce2780bb7585a775d2585b1dcef6b30d64ea48bbc7ef4a0fa70176426f004bd1ee46cca3b79d306cd229832e9428fc38fc69254f0e8725aa0e56ab84f1ae1f944718b8ffcec85fe5fed5c4ce8da2747e907ab5601e578dac3a0a75f5d0dbc06d48437c83f9deafb316f9a5843e67bf2a49f6aaa9a3aaeec9ebaa008abd3378c87b2ceab8fa560ed9104a50fd61c74feb7e07c578f83c0655b13b6a018f908b611f0548f768cb0f2bc96321713fd0c8471157268f83aeb153d88c03fa0f73f4fa958636a3cdd8d841def27cd9a7077efa6ef26196207e30bc3cf2e4161a0ff3f814c899cea00834ea12d9dd1bf3a248980aef83ac2bd42861d034bc9d6c9a0ef580b66c3d9df1d0b65406ac91ae564381fb2f03965b9bc48e6d8cd7457e1fea068d2fc72d3309f1fbbf382620db789e60b33eefdbf2cff5497756871cd7e822ca059c26eb860f2f407929066a3feba531c51d41610ba64098e4a77860c1734b10280",
            "0xf90211a0b38eeb7bff2de0404dce307a32c4959fc8691bd3abb654d966e296237bee336da0de18cafd5fa09d49b9785478da44f26b1464605d0352f35d639525a28e7c9277a01a47b140be01710aba14554d223eae01872c7b025e64fa864c80b4c55fb78bbda0fdb8beca3401bc6eae93443e10cb4e740efa704b910eed008d3ddd2c6cfc8019a0f0d08d301088f2130713be45adca425c9c2581fed27120c3dc8fb30cce772cc2a0fb9f340b17592c263c7aeee34824544bcc7907f242197801603c3e0d2363c26ca0ccdbaada48e3cfae28c50fee412260c85a94e17e880264bff85a24d9c6b1f8a0a0f5e5f8839e9c8227ffc1b9ac1d5d9d77f46373aa9f49a5decdbede9581992497a0eae4dbdc970267ab3d1b6f3190154f96e4f93ff3ef90f5cad6b79c3116e98fdea055f67d32345bcb87916ba8099aa74bfe90db825cee9a6698d506935639d79b97a08c195e45098c147c77f041c6584aa999080dd360a32b71b202658a7e48930340a00a09041789d5bf8e9f41d44582bfcc18e3dd0db775dd4ae56c31570c6a0f4927a06da8bb15b6004f784e3ecfc4f4b2f6e3a7c48143822bbf03cd809bb0ba0f22caa086d597d3b7a1bcbbe6d965ecf03a94bb0691e28f7bc54cf06e895e352d9338c6a0d8473f362d954d95b5e645873630c24e6659efe4a7f1a06934cac81c40d67bbba0f85eb9574f82fa0e062815ca7ef718b2a658b1adb763ef62051376de1ded046b80",
            "0xf90211a06320a27f3c7c36d49797b4687814bdc28d1c3e756b9abedd4b44629adcd6d3d9a04d18a306efe32b77304f2b4450a15bb7a497fbcd76608c3c5932bce9b3cf490ca04e0c64357fb8e94ddcb67ee87b224c24033aeb6edf4d315a82881b1387194f36a08145535a95f20e4937f847041825cfb54813fedb5f6d1b714add8eee75df5f74a0c864fb01ec0ad3317716ee875a0bbc1da3e109712207abb00d41b3cfacb68ac8a0c1d6c36e2463644e2be4dbebfbc1cc80d9e6f0a94a33ad3bfda38c4b7dad0901a01563540a4e0c94100f04894414f25c05dd793ad0a507f944aa0a8208178e9575a06d8c9a5ef969f98554ae2467cda043af99492da929a901f62986561d535e0de8a01d600b1ddd5ab77cb888c4e5bcd64d625c7bcb93b58d933b0614292338078119a0fcfe1a4c53787fc352d0002a2bd19bea4f3468a72e0c18d7d288995f00ede58aa0b4a70b7381d280406d7d2b945b911b4731dffaaa869399ce6a5db29bc1e67a64a0bd5eb8831260280eeff40fb0fbc01920d03dfa172c08a51fb616a7f6e3566879a07d23af51ceec2323a7b183f47d6e2eeccd14a190fbd44d2f7d55dff30ac439c5a0b7f4b127951c70cd4daf430cb82e41f2b37815d0d60185e07a48bd8c7d6b088ba0c322c24be054e00bf210ace1e98811e2fba702dd57230d688316426ff258ab7ca05f80f70564e9c929fe540d520ded1741b548fa09179d7162ec660b07bccfc0c180",
            "0xf90211a0639eb5cef46149b9a8c39b78b9de66e07d58ee46187ff45f2839f0105899d9e8a07acd632dc59a4bed389f18274a1bed7167eac5777e1a3ed16224130958872632a082a202a5775dcc0f9ab49cf984fbb737d93e03682e9e67fdd1c32bebb0bc0943a0bc533d8b1cfcfcfce71a13620d1aa7ef602b63101186f26a75889239efdf4df2a0cd5cf86b859a11b992ad9cff9afdfb0aafebf438ce7d7b4d7ab4a5771b22e0f7a0ec3f5d574e438835549e9f8faf0a67380840fced42805f481443d9043c8541c8a028eb754040c5899d854cd7af6e01d455a566e2f3c915ecb922040277af4c1e30a08aac9f769cf983f0c61fbb17474ce1c484c920c61edbc910cafe99ca37764fd9a0aac55659ff445870bd6876cfa80d66cfef49a5f92440e30549b932d60b3f52f9a0eea82a3a221f8e6403a1808eff00373ca3af9df025d1d6b145dbd6df06971e5ca00b984ff9c0205dbb38b9aa4f450c550e795384af054f094d42719f3d2e263681a040c8adc186a9d59edd1b0af14017c733f80d51ba921f632f81b7dbe7a9c879b7a02dffeb22bcc889b65377829f4cac40b63f76507a4420bc19a277c8de62fa99e9a07d47fcd70854a047830bba5e75c9455c1507e060ab7e6181c4a3807bc5edd5f4a0ea2823ed3fe5c2539e902ad180048a6c51c983a334191ecc39b16f9ccdc0f1f4a083ab0d818747aaddc852cb7d82b92ee3bc04291f727adebb7adf97a78ceb91fb80",
            "0xf90191a07d337e717ecd4ce5f45c4ea8994e476ce38cf937a4f2924dc40cfa8fe5870fe9a03f98e9ce6af172ec08481a6bcffb89a264933f90ee288a82144c0eab968e42ffa03a0f310a3969834830117810b5272686c5ecd25d23764cda7d65e39621d0fc6c8080a04a57ac1163277a820bdae649d632f917b3885a80103654d3216f9409b72525d3a0202b5687d5ef9274cf82bf9878b8ac0cf3f6ab6155ab222a7e10f1e2b8a38266a0d3bee690d48173444d679a7ab969cd9199b83ac3de64db3d987dc6aa2ddb06e7a05c744a48256ec9e3962df21253b1c372fe3b4407b3e391a84ee12a71cd725ea4a0ccb10237fbb545478774d6e858eb7a1327708de6c205c7195d3a5dacd5961209a0607ce5f612ede1e23bcaabf80f67d6a8e0fa854f1922e417fc05f45f5047bd19a05d8e95130d52ae800cf59eccfc20f8fa6151fc227d1fd4d5aded5065398bb700a0c329d67971ead7da9f1d222990d9aa6c0f448bd161c0981ef504b1d7292b666180a015234d9ef39b97af083fb5715dd5cc2f4454a23ca3a4d72419cfde3ea918036c8080",
            "0xf87180a0568a3548f0c468bec66c6d91b1d72f84e44373c03c6e118d7edc6ba8fe9b4d0c80808080808080a0ec26e129a6fc11a5dcc748bd22ca4e41a0ace63cbf1cb2de018e2b9585a06fc680a01cbb8e211f5ca78b0646741b02d02487de590d6b6ba00edd94b14446d159de9d8080808080",
            "0xf8669d2092cd7f3f78137497df02f6ccb9badda93d9782e0f230c807ba728be0b846f8440180a030b9cd8fcdad6ec7a8098aa005fddf8556cf46ac9c75be6de5429529250ec434a0d80d4b7c890cb9d6a4893e6b52bc34b56b25335cb13716e0d1d31383e6b41505"
        ],
        "storageProof": [
            {
            "key": "0xb1de6ac3bca41bb358699e340ae313f38ab8e03d5b03210607f6dbd96e93cb84",
            "value": "0x6dbae7",
            "proof": [
                "0xf90211a02362ee8eb8c9f250fcff84e61d88cdb191561eb8b45e3d3d5a3a826f56c5693fa0a70b4bbd403aaf984f2e506328de02f86ea0d5491bb4dcc21fa222ca2403e189a0a0daf610e555133964b463cc41b9e6056ac7e90ebdf8e161c243e0d17ee75c66a0a98689c8317bfe2f1889168433be6c7c884f403d730214b4df8545d2dba75281a070f9b8c64249814d89e3f9edfbd48154f9be3caf1ca4e44ab848adbfa4f6e8c5a093480d78b9a38aa31bb841902b632ad45816c3c3e6a5e595946e9dcd4fff1b1da085cccacd9318c2369a0b3e2a52c7f7921149aabd1ee3d94259689ae132882080a09ecf07ba0d246b8f93b134cd73bbb97ac6ae42fa537366acdf3751f8061ab980a01423aa11a20c909f4c2e631cefc96706ea8167542e2483a92c8f891d3aa42051a0933b33e63bcd5f1dabbeb8ca897bbd5eeb02dafc7da340bcfa8ce18f5e7f7d08a03297683cd0c40f84478dee7c72c08d9918b8361d6548a4570bbf966ee9fc01a0a01bf5cc43a2bf2034224774af6da1445af2fc2d17c93bf476231c6b2cf5298571a0a8c59bf85d036575610d8bbe614150edfa082473706b9a83a9e265f81a88cf61a028e899a176821709bbac944f855cf4915c199fe0ad2912e816f8190b56bbf4aea09b6a173cf934c1db60d0aec42b3799d6f2bb369801528df5e2120dc0ab525462a0a6c859ed4570f8c0ec354985cae4b08c68e0cfd8b96f68610c52f91f78c55e0d80",
                "0xf90211a08a3b155aca94c17419f89d59bba7160bde9a22492fe18b0c9e52b8fdf1bea596a0fce25faae2ab0d763bec7f5c18a62e725eb4daa6dce6c0bfaef8e4d253342775a00611d47b25d1c657351b0a493376256de57139ecf6a999d5ea63cd1245a927f3a06d02364be2df4ff174c5b87a8278bdc418e25cb3af044acf91600fb69c2555ada08d8457afc52e9c9b23ac6cbf04d015e58f410f0f8b68802f6a10c699cf507c40a0dfdee6927974bf0f28d3a6de21f9b3a360843213aed98b19ae6673bd39e246aca00c1f0d1d5e3024e87f2b8e77b4bf3228159eec3bdc6f82935449759a4d218524a09573dd34badd33408f7227696fd6153286cb6808e4b87705466b82951f0f3709a0c0d5c498e47c7867477dd6cb511962e40eaec5b903ff2161ea169011c8e66db0a07dc872d57409a9d5058f9a579fd3d47d0cf14982e9d2ffcc6276203f0939ca78a0f7936841baa37da29bbd9dc24e97092e2221f5efc4b3754da2cbae72113bb4c3a0e9d40df6c264fd7e2ad994811a47e6880f0d18c133a808838e2229c46cc0a67aa01543af5215b4363d5b423aa49b2e1f1be3c086e2b7a346560c813b626698dbf4a030de56959a61e0326700b41c9d91a87d4585dbbbaaf5010db5c267efa3dc5892a0d39d5c5f57c0b6bc9a509db8d32bb2f5ff53cda8a76cafd63125ac77f19b3349a064e8bfc4a7c28c15d6d7db0486eaa185d48fc3e7bb0d8747573c5ef179edef4c80",
                "0xf90211a0233e644e6834cf25ab75e19691a946c3742188986cf2d340ca40bbc8a8ddd71ba0cbb00568e357c345be0f11d2e2bbe1825abe62c928fdd3029eb0dde412222e8da01d27ab375d6fae7ff76428968cf7db5e79a85472721d8e0603e9c922bceddb12a009a691545d68b4342def2e3de6aeb61d73eb5391ba8605a9ff609e0987ac3e0aa06165e00d25bf644567b9d0afe116885dbbef01af4444d2ae96129a7f5d4930f8a06415bd78af47ea22d1d4f92444ee98a9b54573552cd61b84513c15c44d8a593ba023a33c0ded5bf8dde9bcffd949c0e0843612c8326d1a52b3eacc9784eab7e81ca0c7763f9d16461565c11c44fe7fdeb121e3f08a653877cef9a9ab0f08651192d4a0fcdf719a562e417fe5027eed5e402f66d3149af2d7a0404b3910e6d9b50cf5faa00ee435d36ed231ad443d3b376e7b900879ada40b146b9d07478f957a9aa441c7a0b8f6a13a3c3c6f15be8cbfd179bffeea4a2fe13003a925245357911aa79f1e15a07b13328e62940519c7ce7f54fa63d00caa113951abd61a11771ff6dfda5f6113a0cef9b8b41619096b0109ff243701a135d3710474fdaedf9cbe301dc3d76013f6a0e3d7562afcefa879cd224734346f0ae34bb58d5acb5832888163e5b7e89af436a03ab3a635029f0d92d0e82cc306d8ff2c19aa4b46b6448922ecdd8c2c09a7d748a0ae8b75e5895d1e05cf4db2a77f73ba89236ea84ac493a8620fced08a947a4b0880",
                "0xf90211a017c2b2b9bb4dc709d830fa05353266f0f7c83bce6db1795c559094fd8aed5da1a0dd1d82b2792e73dc1a803598de87cec7337f7e6c84f68166817f776a88b4727ea0374f657612bc6dad64277a48bd074d82aff0dd45707a509cec14bacb947d8d3ca07c8db7221678593fdf09cec7b89dd744a238db956c44d1d0156d51b497f115c7a06eed03b8131aa6cb58020f0da3a89f3606d4d6c95afb45507b0bda45bf908b65a0ab34ac854fbf7417d547828a2a64cab7ce216ab7144c2a006cfd93fa2f38ddcaa09222a83729630e3fd6a153050521826f64c4c5a39293209118a873d6443ea3d1a01cd4e847f124a6b6c18b4153145cae12c2bd3f3f3b4c974d89ea3d6d5b39f5c2a0816329c46f53bc746a0a36479e2a703bffc6b00ca0f9ea0cbfefa84454d87489a0523429c01d0bbb9f5ec31fbe9293ecf36c2eae50065d4c3545548cf541a6dc95a0cb294e12b27026f0146a19547e56c5b7df58ba247ee59f23efd0b6e8006e3ccfa0ba0e38560a64010a61c1a2efd2a69ec497b6128e9a7b7d1cbe372bee565f3d82a01de05a44691f471e2a64cbab678ef3c90697d530480ac254b0771d8dcd9e5386a03e4d7fac2242be7d704178053d195539595acca9e7e3e6fa09b7291712fa4d8da069d519957961d773b691d9b14a55fb5286206658c293c3d0a24498ef70e75207a0ac2ea173de77b6610ec6bd17cf96b0d740868978230ed8e6a76974c2dff7b09880",
                "0xf90211a08da6395d0de7d07b271113dbee4f3f2f9508f624e00d11978a9a7820c770ce98a0c02df3d2a1e3b6c91194ea242f23725aef979aa55d2664b30751f87899255a06a018cb4ee46013c59a133f6aa515034897c1ef9526e65c78fccc402eee01f3f91fa0ded94ba3129a9575dc215151c1e16cdfded633152cf982563cc2d365dda25a86a0bece212d8678c7836bf824aba0c89dc392bc3fc92aa03b2248dc07c250febcd8a043c9868fab7cefe56d197debaa27dddd28c7589d1da8361c112a1b663c921c74a0cbb6cef723c5f093e87806775973fcbd7e6578fa4fa37d9cbb7ec5ca94e8385fa053633d35bc63c93bd9820ea5dadf4a71ca03008273df3e4944a06e5fc53a2458a0190d8b9bedd40cb9598d473f5bd33cfa3f089d87072f13f0d924b49daf8ef852a02afad846738158b4f7d81553704cc7f8ebfc855e50c0d95e05b03688777b9d56a0cebd7394e3929f5332a1e9afea83cabdc132d24ede919c7e5c574b64f8c45250a0f4e1d68f97488ce0264365a21f1e6fe0db5f7ca9d056bf680210c7a3c4c66d63a0aaf73d645f148cc14de393a3ad7a5c2846b5b3b3c369ae45847d9a3c474fac56a08524ec268607b5eb8c2fe31007f4d1dded994fc01fe7e0d2df936975e3e6bf98a089eb8127d6decfcdb977982bc4f5a5d2f119f679ef6e1e02a2426be2f47a6e82a00aa7cdd464adc4f181544cf1b34ef024fbd954268722c383bd32a092d853b2d580",
                "0xf8f18080a00b36c031d38f87c711501fac4df298a4d174e364e13faca1f0236b396ea96655a0d9f497aa3e29a0b55d33fee23d082fa49483eab561f70fa66c4394592faa832d808080a0293ff0ef07b3f8dd031edff577635de3d5163813661468714578ee72bce517198080a0e09c310c9d65b1831e64fd63dbda1f81fcc8edce28923f0de7909d81eb117eb1a0d809a77afb6c009941c7705474a1aa6bf6c3281defc891f8296efccc21c1d663a0e723980bdefa20ba3f84eea97f2b96e1ab2dead87ccf0a1bcbe8b65a418ec2dd80a0947a631d37bfeac47566c28678e3b7ce709a028d596a3b25d14f833c8d4bca9b8080",
                "0xf851808080a05527f643e803fa5da6faf23c3d4f27086f3d82987f9b201558642f68a98671c180a0a1d6e80378d5b1d243839275a64bbb057946132537e663bdc4c75c593439d1928080808080808080808080",
                "0xe39d3d95332b671231a9464da17a6cc7061a86883e852d7ba86bcb1dc3348484836dbae7"
            ]
            }
        ]
    }"#;

    #[test]
    fn test_proof_verification() {
        let data: Value = serde_json::from_str(EIP_1186_ACC_PROOF_RESPONSE).unwrap();
        let proof: EIP1186AccountProofResponse = serde_json::from_value(data).unwrap();

        verify_proof(&proof).unwrap();
    }

    #[test]
    #[should_panic]
    fn test_proof_verification_multiple_storage_proofs() {
        let data: Value = serde_json::from_str(EIP_1186_ACC_PROOF_RESPONSE).unwrap();
        let mut proof: EIP1186AccountProofResponse = serde_json::from_value(data).unwrap();

        proof.storage_proof.push(proof.storage_proof[0].clone());

        verify_proof(&proof).unwrap();
    }

    #[test]
    #[should_panic]
    fn test_proof_verification_invalid_storage_hash() {
        let data: Value = serde_json::from_str(EIP_1186_ACC_PROOF_RESPONSE).unwrap();
        let mut proof: EIP1186AccountProofResponse = serde_json::from_value(data).unwrap();

        proof.storage_hash.rotate_left(1);
        verify_proof(&proof).unwrap();
    }

    #[test]
    #[should_panic]
    fn test_proof_verification_invalid_storage_proof_value() {
        let data: Value = serde_json::from_str(EIP_1186_ACC_PROOF_RESPONSE).unwrap();
        let mut proof: EIP1186AccountProofResponse = serde_json::from_value(data).unwrap();

        let current_val = proof.storage_proof[0].value;

        proof.storage_proof[0].value = current_val.rotate_left(1);

        verify_proof(&proof).unwrap();
    }

    #[test]
    #[should_panic]
    fn test_proof_verification_invalid_storage_proof_proof() {
        let data: Value = serde_json::from_str(EIP_1186_ACC_PROOF_RESPONSE).unwrap();
        let mut proof: EIP1186AccountProofResponse = serde_json::from_value(data).unwrap();

        proof.storage_proof[0].proof.rotate_left(1);

        verify_proof(&proof).unwrap();
    }

    #[test]
    #[should_panic]
    fn test_proof_verification_invalid_storage_proof_key() {
        let data: Value = serde_json::from_str(EIP_1186_ACC_PROOF_RESPONSE).unwrap();
        let mut proof: EIP1186AccountProofResponse = serde_json::from_value(data).unwrap();

        let mut current_key_bytes = proof.storage_proof[0].key.as_b256();
        current_key_bytes.rotate_left(1);

        let invalid_key = alloy_serde::JsonStorageKey::from(current_key_bytes);

        proof.storage_proof[0].key = invalid_key;

        verify_proof(&proof).unwrap();
    }
}
